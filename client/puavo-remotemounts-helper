#!/bin/sh

set -eu

puavo_hosttype=$(cat /etc/puavo/hosttype)

if [ "$puavo_hosttype" != "laptop" ]; then
  exit 0
fi

has_device_tag() {
  jq -r .tags[] /etc/puavo/device.json | grep -qx "$1"
}

use_remotemounts() {
  # NOTE: duplicate in puavo-update-gtk-bookmarks
  # Doing the remote mounts is the default,
  # "no_use_remotemounts"-tag will disable that,
  # but then again "use_remotemounts"-tag overrides it.
  ! has_device_tag no_use_remotemounts || has_device_tag use_remotemounts
}

if ! use_remotemounts; then
  # Tags suggest we should do nothing.
  exit 0
fi

puavo_domain=$(cat /etc/puavo/domain)

case "$(echo $LANG | cut -c 1-2)" in
  fi) sharename='yhteiset'     ;;
  sv) sharename='delade_filer' ;;
  *)  sharename='share'        ;;
esac

primary_group=$(id -gn)

gvfs_mounts="
  smb://homedir.${puavo_domain}/${USER}
  smb://homedir.${puavo_domain}/share/${sharename}/${primary_group}
"

#
# ensure mounts to remote directories come up and stay
#

# XXX we could also periodically check if we can read anything from the mount
# XXX and if we can not, we could do "gvfs-mount -u" (unmount)

while true; do
  for mnt in $gvfs_mounts; do
    timeout 30 gvfs-mount $mnt || true
  done
  sleep 10
done

# should never be reached
